datasource db {
    provider = "sqlite"
    url      = env("DATABASE_URL")
}

generator client {
    provider = "prisma-client-js"
}

model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String?
    access_token      String?
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String?
    session_state     String?

    user User @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
    id                 String               @id @default(cuid())
    name               String?
    email              String?              @unique
    emailVerified      DateTime?
    image              String?
    stripeId           String?              @unique
    isSubscribed       String?              @default("false")
    interval           String?
    credits            Int?                 @default(0)
    bonuscredits       Int?                 @default(1500)
    planstartdate      String?
    planenddate        String?
    accounts           Account[]
    sessions           Session[]
    Space              Space[]
    Tools              Tools[]
    Toolgen            Toolgen[]
    Productdescription Productdescription[]
    Creadit            Creadit[]
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}

model Space {
    id        String    @id @default(cuid())
    name      String
    userId    String
    selected  String?   @default("false")
    slug      String?   @unique
    createdAt DateTime  @default(now())
    updatedAt DateTime  @updatedAt
    user      User      @relation(fields: [userId], references: [id], onDelete: Cascade)
    Toolgen   Toolgen[]
}

model Tools {
    id          String    @id @default(cuid())
    name        String?
    description String?
    slug        String?
    category    String?
    status      String?
    imageUrl    String?
    model       String?
    userId      String
    createdAt   DateTime  @default(now())
    user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
    Toolgen     Toolgen[]
    Creadit     Creadit[]
}

model Toolgen {
    id                 String               @id @default(cuid())
    title              String?
    slug               String?
    isSaved            String?              @default("false")
    toolId             String
    spaceId            String
    userId             String
    createdAt          DateTime             @default(now())
    tool               Tools                @relation(fields: [toolId], references: [id], onDelete: Cascade)
    space              Space                @relation(fields: [spaceId], references: [id], onDelete: Cascade)
    user               User                 @relation(fields: [userId], references: [id], onDelete: Cascade)
    Copygen            Copygen[]
    Productdescription Productdescription[]
    Creadit            Creadit[]
}

model Copygen {
    id           String   @id @default(cuid())
    text         String?
    openaitokens String?
    isSaved      String?  @default("false")
    toolgenId    String
    createdAt    DateTime @default(now())
    toolgen      Toolgen  @relation(fields: [toolgenId], references: [id], onDelete: Cascade)
}

model Productdescription {
    id                     String   @id @default(cuid())
    productname            String?
    productcharacteristics String?
    toneofvoice            String?
    toolgenId              String   @unique
    userId                 String
    createdAt              DateTime @default(now())
    toolgen                Toolgen  @relation(fields: [toolgenId], references: [id], onDelete: Cascade)
    user                   User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Creadit {
    id                String   @id @default(cuid())
    amount            Int?
    charCount         Int?
    wordCount         Int?
    variations        Int?
    openaiid          String?
    prompt_tokens     Int?
    completion_tokens Int?
    openai_tokens     Int?
    model             String?
    toolgenId         String?
    toolId            String?
    createdAt         DateTime @default(now())
    userId            String
    tool              Tools?   @relation(fields: [toolId], references: [id])
    toolgen           Toolgen? @relation(fields: [toolgenId], references: [id])
    user              User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}
